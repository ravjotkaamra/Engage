{"version":3,"sources":["reducers/reducers.js","store.js","services/firebase.js","theme.js","components/PublicRoute.js","components/PrivateRoute.js","actions/authentication/loginActions.js","actions/authentication/oauthAction.js","pages/Authentication/Login.js","actions/authentication/signupActions.js","pages/Authentication/Signup.js","assets/meet.svg","actions/meeting/create.js","pages/Meet.js","actions/authentication/resetActions.js","pages/Authentication/ForgotPassword.js","pages/Skelton.js","services/agora.js","components/Controls.js","components/Videos.js","components/VideoCall.js","components/InviteBtn.js","pages/Conference.js","components/Header/LoginBtn.js","components/Header/SignupBtn.js","components/Header/LogoutBtn.js","components/Header/Navbar.js","assets/team-meeting-colored.svg","pages/Home.js","pages/Chat/ChatBox.js","pages/Chat/ChatMessage.js","pages/Chat/ChatRoom.js","App.js","index.js"],"names":["rootReducer","combineReducers","firebase","firebaseReducer","firestore","firestoreReducer","middlewares","thunk","withExtraArgument","getFirebase","getFirestore","store","createStore","composeWithDevTools","applyMiddleware","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","theme","extendTheme","fonts","heading","body","colors","brand","50","100","200","300","400","500","600","700","800","900","config","initialColorMode","useSystemColorMode","PublicRoute","children","authenticated","rest","render","props","to","PrivateRoute","location","pathname","state","from","toast","createStandaloneToast","signInWithGoogle","dispatch","getState","a","login","provider","type","name","auth","displayName","toastObj","title","description","status","console","log","position","duration","isClosable","variant","Login","useState","email","setEmail","password","setPassword","showPassword","setShowPassword","useDispatch","minH","align","justify","bg","useColorModeValue","spacing","mx","maxW","py","px","fontSize","color","as","ReachLink","rounded","boxShadow","p","onSubmit","event","preventDefault","userCredential","id","value","required","onChange","e","target","size","minLength","colorScheme","aria-label","icon","View","ViewOff","onClick","direction","base","sm","className","_hover","leftIcon","firstName","setFirstName","lastName","setLastName","createUser","profile","signup","placeholder","Meet","history","useHistory","w","alignItems","justifyContent","lg","display","shadow","bgSize","src","meetImage","h2","md","fontWeight","span","mt","uid","meeting","host","participants","collection","add","response","push","createNewMeeting","ForgotPassword","resetPassword","resetPasswordWithEmail","Email","Skelton","height","baseUrl","services","fetchAgoraToken","channel","isPublisher","axios","post","data","Controls","tracks","setStart","client","useClient","video","audio","trackState","setTrackState","mute","setEnabled","ps","leaveChannel","leave","removeAllListeners","close","padding","Videos","remoteUsers","videoTrack","map","user","createClient","mode","codec","useMicrophoneAndCameraTracks","createMicrophoneAndCameraTracks","VideoCall","channelName","useSelector","ready","setRemoteUsers","start","useEffect","init","on","remoteUser","mediaType","subscribe","prevUsers","audioTrack","play","stop","filter","u","agoraServices","token","join","publish","toastProps","InviteBtn","meetId","useDisclosure","isOpen","onOpen","onClose","useFirestore","from_email","from_name","handleSubmit","url","window","href","templateParams","to_email","emailjs","send","doc","update","FieldValue","arrayUnion","border","borderColor","pb","Conference","useParams","useFirestoreConnect","meetings","isLoaded","isEmpty","find","h","LoginBtn","SignupBtn","LogoutBtn","logout","Navbar","toggleMode","useColorMode","toggleColorMode","text","SwitchIcon","FaMoon","FaSun","ref","React","useRef","y","setY","current","getBoundingClientRect","scrollY","useViewportScroll","get","cl","mobileNav","Section","ic","hbg","tcl","dcl","m","svg","flexShrink","xmlns","fill","viewBox","stroke","aria-hidden","ml","Features","hbgh","Fragment","columns","pos","gap","strokeLinecap","strokeLinejoin","strokeWidth","d","AuthButton","MobileNavContent","top","left","right","flexDirection","justifySelf","header","undefined","transition","overflowY","borderBottomWidth","borderBottomColor","div","_focus","rightIcon","Home","xl","pr","lineHeight","mb","MdCheckCircle","width","button","textAlign","boxSize","landingImage","alt","ChatBox","teamId","formValue","setFormValue","sendMessage","photoURL","createdAt","serverTimestamp","class","disabled","ChatMessage","message","messageClass","ChatRoom","subcollections","orderBy","limitToLast","storeAs","messages","ordered","dummy","scrollIntoView","behavior","msg","App","path","exact","rrfProps","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6a553d87.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { firebaseReducer } from 'react-redux-firebase';\nimport { firestoreReducer } from 'redux-firestore';\n\nexport const rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './reducers/reducers';\nimport { getFirestore } from 'redux-firestore';\nimport { getFirebase } from 'react-redux-firebase';\n\n// const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\n// Create store with reducers and initial state\n// const initialState = {};\n// const store = createStore(rootReducer, composeWithDevTools());\nconst initialState = {};\n\nconst middlewares = [thunk.withExtraArgument({ getFirebase, getFirestore })];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\nexport default store;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n};\n\n// Initialize firebase instance\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize other services on firebase instance\nfirebase.firestore();\n","import { extendTheme } from '@chakra-ui/react';\nimport '@fontsource/raleway/400.css';\nimport '@fontsource/open-sans/700.css';\n\nconst colors = {\n  brand: {\n    50: '#ecefff',\n    100: '#cbceeb',\n    200: '#a9aed6',\n    300: '#888ec5',\n    400: '#666db3',\n    500: '#4d5499',\n    600: '#3c4178',\n    700: '#2a2f57',\n    800: '#181c37',\n    900: '#080819',\n  },\n};\n\nconst config = {\n  initialColorMode: 'light',\n  useSystemColorMode: false,\n};\n\nconst theme = extendTheme({\n  fonts: {\n    heading: 'Open Sans',\n    body: 'Raleway',\n  },\n  \n  colors,\n  config,\n});\n\nexport default theme;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({ children, authenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === false ? children : <Redirect to=\"/meet\" />\n      }\n    />\n  );\n};\nexport default PublicRoute;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ children, authenticated, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        return authenticated === true ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n\n// import { createStandaloneToast } from '@chakra-ui/react';\n// import theme from '../theme';\n\n// const toast = createStandaloneToast({ theme });\n//   if (!authenticated) {\n//     toast({\n//       title: 'You are not logged in',\n//       description: 'Please login or create a new account to continue',\n//       status: 'info',\n//       position: 'top',\n//       duration: 4000,\n//       isClosable: true,\n//       variant: 'top-accent',\n//     });\n//   }\n","import { createStandaloneToast } from '@chakra-ui/react';\nimport theme from '../../theme';\nconst toast = createStandaloneToast({ theme });\n\nexport const login = (email, password) => {\n  return async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    let toastObj;\n    try {\n      // use firebase object to login with email and password\n      const userCredential = await firebase.login({ email, password });\n      const name = getState().firebase.auth.displayName;\n      toastObj = {\n        title: 'Logged in',\n        description: `Welcome ${name}!`,\n        status: 'success',\n      };\n      console.log('user information: >>', userCredential);\n    } catch (error) {\n      toastObj = {\n        title: 'Wrong Credentials',\n        description: 'Wrong email or password is incorrect',\n        status: 'error',\n      };\n      console.log('trouble signing in', error);\n    }\n    toast({\n      ...toastObj,\n      position: 'top',\n      duration: 5000,\n      isClosable: true,\n      variant: 'left-accent',\n    });\n  };\n};\n\nexport const logout = () => {\n  return async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    try {\n      await firebase.logout();\n      console.log('user successfully logged out');\n    } catch (error) {\n      console.log('trouble logging out', error);\n    }\n  };\n};\n","import { createStandaloneToast } from '@chakra-ui/react';\nimport theme from '../../theme';\n// for setting the notification alerts on success or error\nconst toast = createStandaloneToast({ theme });\n\nexport const signInWithGoogle = () => {\n  return async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    let toastObj;\n    try {\n      await firebase.login({\n        provider: 'google',\n        type: 'popup',\n      });\n      const name = getState().firebase.auth.displayName;\n      toastObj = {\n        title: 'Logged in',\n        description: `Welcome ${name}!`,\n        status: 'success',\n      };\n    } catch (error) {\n      console.log('trouble google signin: >>', error);\n      toastObj = {\n        title: 'Unexpected error',\n        description: 'Could not complete logging in',\n        status: 'warning',\n      };\n    }\n\n    toast({\n      ...toastObj,\n      position: 'top',\n      duration: 5000,\n      isClosable: true,\n      variant: 'left-accent',\n    });\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { Link as ReachLink } from 'react-router-dom';\nimport {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Checkbox,\n  Stack,\n  Link,\n  Button,\n  IconButton,\n  Heading,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaGoogle } from 'react-icons/fa';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { useState } from 'react';\nimport { login } from '../../actions/authentication/loginActions';\nimport { signInWithGoogle } from '../../actions/authentication/oauthAction';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  // const history = useHistory();\n  const dispatch = useDispatch();\n\n  // if the user submits the login form\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(login(email, password));\n    setEmail('');\n    setPassword('');\n  };\n\n  // if the user clicks the signin with google button\n  const googleSignIn = () => {\n    dispatch(signInWithGoogle());\n  };\n\n  return (\n    <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      bg={useColorModeValue('gray.50', 'gray.800')}\n    >\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Stack align={'center'}>\n          <Heading fontSize={'4xl'}>Sign in to your account</Heading>\n          <Text fontSize={'lg'} color={'gray.600'}>\n            Don't have an account{' '}\n            <Link as={ReachLink} to=\"/signup\" color={'blue.400'}>\n              signup\n            </Link>\n          </Text>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <form onSubmit={handleSubmit}>\n            <Stack spacing={4}>\n              <FormControl id=\"email\">\n                <FormLabel>Email address</FormLabel>\n                <Input\n                  type=\"email\"\n                  value={email}\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormControl>\n              <FormControl id=\"password\">\n                <FormLabel>Password</FormLabel>\n                <InputGroup size=\"md\">\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    value={password}\n                    required\n                    minLength=\"6\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <InputRightElement>\n                    <IconButton\n                      variant=\"ghost\"\n                      colorScheme=\"teal\"\n                      aria-label=\"hideOrShowPass\"\n                      icon={showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                      onClick={() => setShowPassword(!showPassword)}\n                    />\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Stack spacing={10}>\n                <Stack\n                  direction={{ base: 'column', sm: 'row' }}\n                  align={'start'}\n                  justify={'space-between'}\n                >\n                  <Checkbox>Remember me</Checkbox>\n                  <Link as={ReachLink} to=\"/reset\" color={'blue.400'}>\n                    Forgot password?\n                  </Link>\n                </Stack>\n                <Stack className=\"login-btns\">\n                  <Button\n                    type=\"submit\"\n                    bg={'blue.400'}\n                    color={'white'}\n                    _hover={{\n                      bg: 'blue.500',\n                    }}\n                  >\n                    Sign in\n                  </Button>\n                  <Text fontSize={'md'} color={'gray.600'} align={'center'}>\n                    OR\n                  </Text>\n                  <Button\n                    leftIcon={<FaGoogle />}\n                    bg={'red.400'}\n                    color={'white'}\n                    _hover={{\n                      bg: 'red.500',\n                    }}\n                    onClick={googleSignIn}\n                  >\n                    Sign in with Google\n                  </Button>\n                </Stack>\n              </Stack>\n            </Stack>\n          </form>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n","import { createStandaloneToast } from '@chakra-ui/react';\nimport theme from '../../theme';\nconst toast = createStandaloneToast({ theme });\n\nexport const signup = (email, password, displayName) => {\n  return async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    let toastObj;\n    try {\n      // use firebase object to create new account with email and password\n      const userCredential = await firebase.createUser(\n        { email, password },\n        { displayName, email }\n      );\n      const name = getState().firebase.profile.displayName;\n      toastObj = {\n        title: 'Account created',\n        description: `Welcome ${name}!`,\n        status: 'success',\n      };\n      console.log('user information: >>', userCredential);\n    } catch (error) {\n      console.log('trouble signup', error);\n      toastObj = {\n        title: 'Wrong Credentials',\n        description: 'Wrong email or password is too short',\n        status: 'error',\n      };\n    }\n\n    toast({\n      ...toastObj,\n      position: 'top',\n      duration: 5000,\n      isClosable: true,\n      variant: 'left-accent',\n    });\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { Link as ReachLink } from 'react-router-dom';\nimport {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Checkbox,\n  Stack,\n  Link,\n  Button,\n  IconButton,\n  Heading,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaGoogle } from 'react-icons/fa';\nimport { ViewIcon, ViewOffIcon } from '@chakra-ui/icons';\nimport { useState } from 'react';\nimport { signup } from '../../actions/authentication/signupActions';\nimport { signInWithGoogle } from '../../actions/authentication/oauthAction';\n\nexport default function Login() {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const dispatch = useDispatch();\n\n  // if the user submits the signUp form\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const name = `${firstName} ${lastName}`;\n    dispatch(signup(email, password, name));\n    setEmail('');\n    setPassword('');\n    setFirstName('');\n    setLastName('');\n  };\n\n  // if the user clicks the signup with google button\n  const googleSignUp = () => {\n    dispatch(signInWithGoogle());\n  };\n\n  return (\n    <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      bg={useColorModeValue('gray.50', 'gray.800')}\n    >\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Stack align={'center'}>\n          <Heading fontSize={'4xl'}>Create a new account</Heading>\n          <Text fontSize={'lg'} color={'gray.600'}>\n            Already have an account{' '}\n            <Link as={ReachLink} to=\"/login\" color={'blue.400'}>\n              login\n            </Link>\n          </Text>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <form onSubmit={handleSubmit}>\n            <Stack spacing={4}>\n              <Stack\n                direction={{ base: 'column', sm: 'row' }}\n                align={'start'}\n                justify={'space-between'}\n              >\n                <FormControl id=\"first-name\">\n                  <FormLabel>First Name</FormLabel>\n                  <Input\n                    type=\"text\"\n                    value={firstName}\n                    placeholder=\"John\"\n                    required\n                    onChange={(e) => setFirstName(e.target.value)}\n                  />\n                </FormControl>\n                <FormControl id=\"last-name\">\n                  <FormLabel>Last Name</FormLabel>\n                  <Input\n                    type=\"text\"\n                    value={lastName}\n                    placeholder=\"Doe (optional)\"\n                    onChange={(e) => setLastName(e.target.value)}\n                  />\n                </FormControl>\n              </Stack>\n              <FormControl id=\"email\">\n                <FormLabel>Email address</FormLabel>\n                <Input\n                  type=\"email\"\n                  value={email}\n                  required\n                  placeholder=\"johndoe@microsoft.com\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormControl>\n              <FormControl id=\"password\">\n                <FormLabel>Password</FormLabel>\n                <InputGroup size=\"md\">\n                  <Input\n                    type={showPassword ? 'text' : 'password'}\n                    value={password}\n                    required\n                    minLength=\"6\"\n                    placeholder=\"Must have atleast 6 characters\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <InputRightElement>\n                    <IconButton\n                      variant=\"ghost\"\n                      colorScheme=\"teal\"\n                      aria-label=\"hideOrShowPass\"\n                      icon={showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                      onClick={() => setShowPassword(!showPassword)}\n                    />\n                  </InputRightElement>\n                </InputGroup>\n              </FormControl>\n              <Stack spacing={10}>\n                <Stack\n                  direction={{ base: 'column', sm: 'row' }}\n                  align={'start'}\n                  justify={'space-between'}\n                >\n                  <Checkbox>Remember me</Checkbox>\n                  <Link as={ReachLink} to=\"/reset\" color={'blue.400'}>\n                    Forgot password?\n                  </Link>\n                </Stack>\n                <Stack className=\"login-btns\">\n                  <Button\n                    type=\"submit\"\n                    bg={'blue.400'}\n                    color={'white'}\n                    _hover={{\n                      bg: 'blue.500',\n                    }}\n                  >\n                    Sign up\n                  </Button>\n                  <Text fontSize={'md'} color={'gray.600'} align={'center'}>\n                    OR\n                  </Text>\n                  <Button\n                    leftIcon={<FaGoogle />}\n                    bg={'red.400'}\n                    color={'white'}\n                    _hover={{\n                      bg: 'red.500',\n                    }}\n                    onClick={googleSignUp}\n                  >\n                    Sign up with Google\n                  </Button>\n                </Stack>\n              </Stack>\n            </Stack>\n          </form>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/meet.756b6ea0.svg\";","import { createStandaloneToast } from '@chakra-ui/react';\nimport theme from '../../theme';\nconst toast = createStandaloneToast({ theme });\n\nexport const createNewMeeting = (history) => {\n  return async (dispatch, getState, { getFirestore }) => {\n    // getting state from redux store\n    const state = getState();\n    // getting firestore object for accessing 'meetings' collection\n    const firestore = getFirestore();\n    // getting user id of the logged in user\n    const uid = state.firebase.auth.uid;\n    // getting email id and name of the logged in user\n    const { email, displayName } = state.firebase.profile;\n    // for displaying alerts on to the screen\n    let toastObj;\n    // creating a new meeting with following info\n    const meeting = {\n      name: 'Meeting',\n      host: { uid, email, name: displayName },\n      participants: null,\n    };\n    // console.log('firebase :>> ', firebase);\n    // send a post request to the firebase collection to create a new meeting\n    try {\n      const response = await firestore.collection('meetings').add(meeting);\n      history.push(`/join/meet/${response.id}`);\n      toastObj = {\n        title: 'Meeting created',\n        description: 'Click on invite button to meet your friends',\n        status: 'success',\n      };\n      console.log('response :>> ', response.id);\n    } catch (error) {\n      console.log('error :>> ', error);\n      toastObj = {\n        title: 'Unexpected error',\n        description: 'Please check your internet connection',\n        status: 'error',\n      };\n    }\n\n    // send a notification alert on to the screen\n    toast({\n      ...toastObj,\n      position: 'top',\n      duration: 5000,\n      isClosable: true,\n      variant: 'left-accent',\n    });\n  };\n};\n","import React from 'react';\nimport {\n  chakra,\n  Button,\n  Box,\n  Flex,\n  Image,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport { AiOutlineVideoCameraAdd } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\nimport meetImage from '../assets/meet.svg';\nimport { createNewMeeting } from '../actions/meeting/create';\n\nconst Meet = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  return (\n    <Flex\n      bg={useColorModeValue('#F9FAFB', 'gray.600')}\n      p={50}\n      w=\"full\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box\n        bg={useColorModeValue('white', 'gray.800')}\n        mx={{ lg: 8 }}\n        display={{ lg: 'flex' }}\n        maxW={{ lg: '5xl' }}\n        shadow={{ lg: 'lg' }}\n        rounded={{ lg: 'lg' }}\n      >\n        <Box w={{ lg: '50%' }}>\n          <Image rounded={{ lg: 'lg' }} bgSize=\"cover\" src={meetImage} />\n        </Box>\n\n        <Box py={12} px={6} maxW={{ base: 'xl', lg: '5xl' }} w={{ lg: '50%' }}>\n          <chakra.h2\n            fontSize={{ base: '2xl', md: '3xl' }}\n            color={useColorModeValue('gray.800', 'white')}\n            fontWeight=\"bold\"\n          >\n            Meet Your{' '}\n            <chakra.span color={useColorModeValue('brand.600', 'brand.400')}>\n              Friends\n            </chakra.span>\n          </chakra.h2>\n          <chakra.p mt={4} color={useColorModeValue('gray.600', 'gray.400')}>\n            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Quidem\n            modi reprehenderit vitae exercitationem aliquid dolores ullam\n            temporibus enim expedita aperiam mollitia iure consectetur dicta\n            tenetur, porro consequuntur saepe accusantium consequatur.\n          </chakra.p>\n\n          <Box mt={8}>\n            <Button\n              onClick={() => dispatch(createNewMeeting(history))}\n              leftIcon={<AiOutlineVideoCameraAdd />}\n              bg=\"gray.900\"\n              color=\"gray.100\"\n              px={5}\n              py={3}\n              fontWeight=\"semibold\"\n              rounded=\"lg\"\n              _hover={{ bg: 'gray.800' }}\n            >\n              New Meeting\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Meet;\n","import { createStandaloneToast } from '@chakra-ui/react';\nimport theme from '../../theme';\n// for setting the notification alerts on success or error\nconst toast = createStandaloneToast({ theme });\n\nexport const resetPasswordWithEmail = (email) => {\n  return async (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    let toastObj;\n    try {\n      await firebase.resetPassword(email);\n      toastObj = {\n        title: 'Success',\n        description: `Sent reset link to ${email}`,\n        status: 'success',\n      };\n    } catch (error) {\n      console.log('trouble resetting password: >>', error);\n      toastObj = {\n        title: 'Wrong Email',\n        description: 'Please enter the correct email address',\n        status: 'error',\n      };\n    }\n\n    toast({\n      ...toastObj,\n      position: 'top',\n      duration: 5000,\n      isClosable: true,\n      variant: 'left-accent',\n    });\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { EmailIcon } from '@chakra-ui/icons';\nimport {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Button,\n  Heading,\n  Text,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { HiLogin } from 'react-icons/hi';\nimport { useState } from 'react';\nimport { resetPasswordWithEmail } from '../../actions/authentication/resetActions';\n\nexport default function ForgotPassword() {\n  const [email, setEmail] = useState('');\n\n  // const history = useHistory();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // if the user submits the login form\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(resetPasswordWithEmail(email));\n    setEmail('');\n  };\n\n  return (\n    <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      bg={useColorModeValue('gray.50', 'gray.800')}\n    >\n      <Stack spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Stack align={'center'}>\n          <Heading align=\"center\" fontSize={'4xl'}>Trouble Logging In?</Heading>\n          <Text align=\"center\" fontSize={'md'} color={'gray.600'}>\n            Enter your email address and we'll send you a link to get back into\n            your account.\n          </Text>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <form onSubmit={handleSubmit}>\n            <Stack spacing={4}>\n              <FormControl id=\"email\">\n                <FormLabel>Email address</FormLabel>\n                <Input\n                  type=\"email\"\n                  value={email}\n                  placeholder=\"johndoe@microsoft.com\"\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormControl>\n\n              <Stack spacing={10}>\n                <Stack className=\"login-btns\">\n                  <Button\n                    leftIcon={<EmailIcon />}\n                    type=\"submit\"\n                    bg={'blue.400'}\n                    color={'white'}\n                    _hover={{\n                      bg: 'blue.500',\n                    }}\n                  >\n                    Send Reset Link\n                  </Button>\n                  <Text fontSize={'md'} color={'gray.600'} align={'center'}>\n                    OR\n                  </Text>\n                  <Button\n                    leftIcon={<HiLogin />}\n                    bg={'green.50'}\n                    color={'blackAlpha.700'}\n                    _hover={{\n                      bg: 'green.100',\n                    }}\n                    onClick={() => history.push('/login')}\n                  >\n                    Back To Login\n                  </Button>\n                </Stack>\n              </Stack>\n            </Stack>\n          </form>\n        </Box>\n      </Stack>\n    </Flex>\n  );\n}\n","import React from 'react';\nimport { Skeleton, Stack } from '@chakra-ui/react';\n\nconst Skelton = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"xl\" />\n    </Stack>\n  );\n};\n\nexport default Skelton;\n","import axios from 'axios';\nconst baseUrl = '/api/rtctoken';\n\nconst fetchAgoraToken = async (channel, uid, isPublisher = true) => {\n  const body = {\n    channel,\n    uid,\n    isPublisher,\n  };\n  const response = await axios.post(baseUrl, body);\n  return response.data;\n};\n\nconst services = { fetchAgoraToken };\nexport default services;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Box, ButtonGroup, IconButton } from '@chakra-ui/react';\nimport { ImPhoneHangUp } from 'react-icons/im';\nimport {\n  FaMicrophone,\n  FaMicrophoneSlash,\n  FaVideo,\n  FaVideoSlash,\n} from 'react-icons/fa';\n\nconst Controls = ({ tracks, setStart, useClient }) => {\n  const client = useClient();\n  const [trackState, setTrackState] = useState({ video: true, audio: true });\n  const history = useHistory();\n\n  const mute = async (type) => {\n    if (type === 'audio') {\n      await tracks[0].setEnabled(!trackState.audio);\n      setTrackState((ps) => {\n        return { ...ps, audio: !ps.audio };\n      });\n    } else if (type === 'video') {\n      await tracks[1].setEnabled(!trackState.video);\n      setTrackState((ps) => {\n        return { ...ps, video: !ps.video };\n      });\n    }\n  };\n\n  const leaveChannel = async () => {\n    await client.leave();\n    client.removeAllListeners();\n    tracks[0].close();\n    tracks[1].close();\n    setStart(false);\n    history.push('/meet');\n  };\n\n  return (\n    <Box className=\"controls\">\n    <ButtonGroup variant=\"solid\" spacing={5} px={4}>\n      <IconButton\n        className={trackState.audio ? 'on' : ''}\n        onClick={() => mute('video')}\n        colorScheme=\"blackAlpha\"\n        aria-label=\"Toggle Video Camera\"\n        icon={trackState.video ? <FaVideo /> : <FaVideoSlash />}\n        padding={4}\n      />\n      <IconButton\n        className={trackState.audio ? 'on' : ''}\n        onClick={() => mute('audio')}\n        colorScheme=\"blackAlpha\"\n        aria-label=\"Toggle microphone\"\n        icon={trackState.audio ? <FaMicrophone /> : <FaMicrophoneSlash />}\n        padding={4}\n      />\n      <IconButton\n        onClick={() => leaveChannel()}\n        colorScheme=\"red\"\n        aria-label=\"hangup call\"\n        icon={<ImPhoneHangUp />}\n        padding={4}\n      />\n    </ButtonGroup>\n    </Box>\n  );\n};\n\nexport default Controls;\n","import React from 'react';\nimport { AgoraVideoPlayer } from 'agora-rtc-react';\nimport { Box } from '@chakra-ui/layout';\n\nconst Videos = ({ remoteUsers, tracks }) => {\n  return (\n    <Box>\n      <Box id=\"videos\">\n        <AgoraVideoPlayer className=\"vid\" videoTrack={tracks[1]} />\n        {remoteUsers?.map((user) =>\n          user.videoTrack ? (\n            <AgoraVideoPlayer\n              className=\"vid\"\n              videoTrack={user.videoTrack}\n              key={user.uid}\n            />\n          ) : null\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Videos;\n","import React, { useState, useEffect } from 'react';\nimport agoraServices from '../services/agora';\nimport { Box } from '@chakra-ui/layout';\nimport { createClient, createMicrophoneAndCameraTracks } from 'agora-rtc-react';\nimport Controls from './Controls';\nimport Videos from './Videos';\nimport { useSelector } from 'react-redux';\n// constants for configuring AgoraRTC\nconst agoraConfig = {\n  mode: 'rtc',\n  codec: 'h264',\n};\nconst agoraAppId = process.env.REACT_APP_AGORA_APP_ID; //ENTER APP ID HERE\nconst useClient = createClient(agoraConfig);\nconst useMicrophoneAndCameraTracks = createMicrophoneAndCameraTracks();\nconst VideoCall = ({ channelName }) => {\n  const auth = useSelector(({ firebase }) => firebase.auth);\n\n  const client = useClient();\n  const { ready, tracks } = useMicrophoneAndCameraTracks();\n  console.log('client :>> ', client);\n  const [remoteUsers, setRemoteUsers] = useState([]);\n  const [start, setStart] = useState(false);\n\n  console.log('start :>> ', start);\n  console.log('remoteUsers :>> ', remoteUsers);\n  console.log('ready :>> ', ready);\n  console.log('tracks :>> ', tracks);\n  useEffect(() => {\n    // function to initialise the SDK\n    const init = async (channelName) => {\n      client.on('user-published', async (remoteUser, mediaType) => {\n        await client.subscribe(remoteUser, mediaType);\n        console.log('subscribe success');\n        if (mediaType === 'video') {\n          setRemoteUsers((prevUsers) => {\n            return [...prevUsers, remoteUser];\n          });\n        }\n        if (mediaType === 'audio') {\n          remoteUser.audioTrack?.play();\n        }\n      });\n\n      client.on('user-unpublished', (remoteUser, type) => {\n        console.log('unpublished', remoteUser, type);\n        if (type === 'audio') {\n          remoteUser.audioTrack?.stop();\n        }\n        if (type === 'video') {\n          setRemoteUsers((prevUsers) => {\n            return prevUsers.filter((u) => u.uid !== remoteUser.uid);\n          });\n        }\n      });\n\n      client.on('user-left', (remoteUser) => {\n        console.log('leaving', remoteUser);\n        setRemoteUsers((prevUsers) => {\n          return prevUsers.filter((u) => u.uid !== remoteUser.uid);\n        });\n      });\n\n      const { uid, token } = await agoraServices.fetchAgoraToken(\n        channelName,\n        auth.uid\n      );\n      console.log('user id token blabla :>> ', uid, typeof uid);\n      await client.join(agoraAppId, channelName, token, uid);\n      if (tracks) {\n        await client.publish([tracks[0], tracks[1]]);\n      }\n      setStart(true);\n    };\n\n    if (ready && tracks) {\n      console.log('init ready');\n      init(channelName);\n    }\n  }, [auth.uid, channelName, client, ready, tracks]);\n\n  return (\n    <Box>\n      {start && tracks && <Videos remoteUsers={remoteUsers} tracks={tracks} />}\n      {ready && tracks && (\n        <Controls useClient={useClient} tracks={tracks} setStart={setStart} />\n      )}\n    </Box>\n  );\n};\nexport default VideoCall;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  FormControl,\n  Input,\n  FormLabel,\n  ButtonGroup,\n} from '@chakra-ui/react';\n\nimport emailjs from 'emailjs-com';\n\n// import { FaUserPlus } from 'react-icons/fa';\n\n// const Util = () => {\n//   return (\n//     <Container centerContent>\n//       <Box>\n//         <Button\n//           size=\"md\"\n//           leftIcon={<FaUserPlus />}\n//           colorScheme=\"teal\"\n//           variant=\"solid\"\n//         >\n//           Invite\n//         </Button>\n//       </Box>\n//     </Container>\n//   );\n// };\nimport { createStandaloneToast } from '@chakra-ui/react';\nimport theme from '../theme';\nimport { EmailIcon } from '@chakra-ui/icons';\nimport { BsFillPlusSquareFill } from 'react-icons/bs';\nimport { useFirestore } from 'react-redux-firebase';\n\n// emailjs configurations\nconst serviceID = process.env.REACT_APP_EMAILJS_SERVICE_ID;\nconst templateID = process.env.REACT_APP_EMAILJS_TEMPLATE_ID;\nconst userID = process.env.REACT_APP_EMAILJS_USER_ID;\n\n// props for sending toasts\nlet toastProps = {\n  position: 'top',\n  duration: 4000,\n  isClosable: true,\n  variant: 'left-accent',\n};\n\nconst InviteBtn = ({ meetId }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [email, setEmail] = useState('');\n  const firestore = useFirestore();\n\n  const { email: from_email, displayName: from_name } = useSelector(\n    ({ firebase }) => firebase.auth\n  );\n  const toast = createStandaloneToast({ theme });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // email message content\n    const url = window.location.href;\n    const templateParams = {\n      from_name,\n      from_email,\n      url,\n      to_email: email,\n    };\n\n    try {\n      // use emailjs to send the invite\n      const response = await emailjs.send(\n        serviceID,\n        templateID,\n        templateParams,\n        userID\n      );\n\n      // send an alert to the user\n      toast({\n        title: 'Invite sent',\n        description: `Invitation sent successfully to ${email}`,\n        status: 'success',\n        ...toastProps,\n      });\n      console.log('email sent successfully :>> ', response);\n      // update the database to indicate that the user is invited\n      await firestore\n        .collection('meetings')\n        .doc(meetId)\n        .update({\n          participants: firestore.FieldValue.arrayUnion({ email }),\n        });\n\n      setEmail('');\n    } catch (error) {\n      console.log('sorry email could not be sent', error);\n      toast({\n        title: 'Invite failed',\n        description: 'Please check the email address',\n        status: 'error',\n        ...toastProps,\n      });\n    }\n  };\n\n  return (\n    <>\n      <Button\n        variant=\"outline\"\n        border=\"2px\"\n        borderColor=\"whiteAlpha.400\"\n        leftIcon={<BsFillPlusSquareFill />}\n        onClick={onOpen}\n        color=\"green.300\"\n        px={6}\n        py={6}\n        fontSize=\"sm\"\n        fontWeight=\"semibold\"\n        rounded=\"md\"\n        _hover={{ bg: 'gray.700' }}\n      >\n        Invite\n      </Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Add participants</ModalHeader>\n          <ModalCloseButton />\n          <form onSubmit={handleSubmit}>\n            <ModalBody pb={6}>\n              <FormControl>\n                <FormLabel>Email address</FormLabel>\n                <Input\n                  type=\"email\"\n                  value={email}\n                  placeholder=\"johndoe@microsoft.com\"\n                  required\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </FormControl>\n            </ModalBody>\n\n            <ModalFooter>\n              <ButtonGroup spacing=\"5\">\n                <Button\n                  leftIcon={<EmailIcon />}\n                  type=\"submit\"\n                  bg={'brand.500'}\n                  color={'white'}\n                  _hover={{\n                    bg: 'brand.600',\n                  }}\n                >\n                  Send Invite\n                </Button>\n\n                <Button colorScheme=\"brand\" variant=\"outline\" onClick={onClose}>\n                  Cancel\n                </Button>\n              </ButtonGroup>\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default InviteBtn;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { isEmpty, isLoaded, useFirestoreConnect } from 'react-redux-firebase';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Skelton from './Skelton';\nimport {\n  Box,\n  Center,\n  createStandaloneToast,\n} from '@chakra-ui/react';\nimport theme from '../theme';\nimport VideoCall from '../components/VideoCall';\nimport InviteBtn from '../components/InviteBtn';\n\nconst Conference = () => {\n  const meetId = useParams().id;\n  const history = useHistory();\n  const toast = createStandaloneToast({ theme });\n  const user = useSelector((state) => state.firebase.auth);\n\n  // sync meetings collection from Firestore into redux\n  useFirestoreConnect([\n    {\n      collection: 'meetings',\n      doc: meetId,\n    },\n  ]);\n  // Get the meeting from redux state\n  const meeting = useSelector(\n    ({ firestore: { data } }) => data.meetings && data.meetings[meetId]\n  );\n  console.log('meeting :>> ', meeting);\n\n  // Show skelton while meeting is loading\n  if (!isLoaded(meeting)) {\n    return <Skelton />;\n  }\n  // Show errormessage if there is no such meeting\n  if (isEmpty(meeting)) {\n    history.push('/meet');\n    toast({\n      title: 'Wrong URL',\n      description: 'Please enter the correct meeting url',\n      status: 'error',\n      position: 'top',\n      duration: 4000,\n      isClosable: true,\n      variant: 'top-accent',\n    });\n    return null;\n  }\n\n  // check if the user is invited to the current meeting\n  const isInvited =\n    meeting.host.email === user.email ||\n    (meeting.participants &&\n      meeting.participants.find((p) => p.email === user.email));\n\n  if (!isInvited) {\n    history.push('/meet');\n    toast({\n      title: 'Sorry host has not invited you',\n      description: 'Please contact the host for invitation link!',\n      status: 'warning',\n      position: 'top',\n      duration: 4000,\n      isClosable: true,\n      variant: 'top-accent',\n    });\n    return null;\n  }\n\n  return (\n    <Box h=\"100vh\" bg=\"gray.800\">\n      <Center>\n        <Center>\n          <InviteBtn meetId={meetId}/>\n        </Center>\n      </Center>\n      <Center>\n        <Box className=\"conference\" border=\"1px\">\n          <VideoCall channelName={meetId} />\n        </Box>\n      </Center>\n    </Box>\n  );\n};\n\nexport default Conference;\n","import React from 'react';\nimport { Button } from '@chakra-ui/button';\nimport { useHistory } from 'react-router-dom';\n\nconst LoginBtn = () => {\n  const history = useHistory();\n  return (\n    <Button\n      colorScheme=\"brand\"\n      variant=\"ghost\"\n      size=\"sm\"\n      onClick={() => history.push('/login')}\n    >\n      Log in\n    </Button>\n  );\n};\n\nexport default LoginBtn;\n","import React from 'react';\nimport { Button } from '@chakra-ui/button';\nimport { useHistory } from 'react-router-dom';\n\nconst SignupBtn = () => {\n  const history = useHistory();\n  return (\n    <Button\n      colorScheme=\"brand\"\n      variant=\"solid\"\n      size=\"sm\"\n      onClick={() => history.push('/signup')}\n    >\n      Sign up\n    </Button>\n  );\n};\n\nexport default SignupBtn;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../actions/authentication/loginActions';\nimport { Button } from '@chakra-ui/button';\nimport { useHistory } from 'react-router-dom';\n\nconst LogoutBtn = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const handleClick = () => {\n    dispatch(logout());\n    history.push('/');\n  };\n  return (\n    <Button\n      colorScheme=\"brand\"\n      variant=\"outline\"\n      size=\"sm\"\n      onClick={handleClick}\n    >\n      Log out\n    </Button>\n  );\n};\n\nexport default LogoutBtn;\n","import React from 'react';\nimport { Link as ReachLink, useHistory } from 'react-router-dom';\nimport {\n  chakra,\n  HStack,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  Box,\n  Flex,\n  IconButton,\n  useColorModeValue,\n  useDisclosure,\n  CloseButton,\n  VStack,\n  Button,\n  useColorMode,\n  SimpleGrid,\n  Stack,\n  Heading,\n} from '@chakra-ui/react';\nimport { useViewportScroll } from 'framer-motion';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport { AiFillHome, AiOutlineInbox, AiOutlineMenu } from 'react-icons/ai';\nimport { BsFillCameraVideoFill } from 'react-icons/bs';\nimport { FaMoon, FaSun } from 'react-icons/fa';\nimport LoginBtn from './LoginBtn';\nimport SignupBtn from './SignupBtn';\nimport LogoutBtn from './LogoutBtn';\n\nexport default function Navbar({ authenticated }) {\n  const history = useHistory();\n\n  const { toggleColorMode: toggleMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n  const bg = useColorModeValue('white', 'gray.800');\n  const ref = React.useRef();\n  const [y, setY] = React.useState(0);\n  const { height = 0 } = ref.current ? ref.current.getBoundingClientRect() : {};\n\n  const { scrollY } = useViewportScroll();\n  React.useEffect(() => {\n    return scrollY.onChange(() => setY(scrollY.get()));\n  }, [scrollY]);\n  const cl = useColorModeValue('gray.800', 'white');\n  const mobileNav = useDisclosure();\n\n  const Section = (props) => {\n    const ic = useColorModeValue('brand.600', 'brand.50');\n    const hbg = useColorModeValue('gray.50', 'brand.400');\n    const tcl = useColorModeValue('gray.900', 'gray.50');\n    const dcl = useColorModeValue('gray.500', 'gray.50');\n    return (\n      <Link\n        m={-3}\n        p={3}\n        display=\"flex\"\n        alignItems=\"start\"\n        rounded=\"lg\"\n        _hover={{ bg: hbg }}\n      >\n        <chakra.svg\n          flexShrink={0}\n          h={6}\n          w={6}\n          color={ic}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          {props.icon}\n        </chakra.svg>\n        <Box ml={4}>\n          <chakra.p fontSize=\"sm\" fontWeight=\"700\" color={tcl}>\n            {props.title}\n          </chakra.p>\n          <chakra.p mt={1} fontSize=\"sm\" color={dcl}>\n            {props.children}\n          </chakra.p>\n        </Box>\n      </Link>\n    );\n  };\n\n  const Features = (props) => {\n    const hbg = useColorModeValue('gray.50', 'brand.400');\n    const hbgh = useColorModeValue('gray.100', 'brand.500');\n    const tcl = useColorModeValue('gray.900', 'gray.50');\n    return (\n      <React.Fragment>\n        <SimpleGrid\n          columns={props.h ? { base: 1, md: 3, lg: 5 } : 1}\n          pos=\"relative\"\n          gap={{ base: 6, sm: 8 }}\n          px={5}\n          py={6}\n          p={{ sm: 8 }}\n        >\n          <Section\n            title=\"Analytics\"\n            icon={\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n              />\n            }\n          >\n            Get a better understanding of where your traffic is coming from.\n          </Section>\n\n          <Section\n            title=\"Engagement\"\n            icon={\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M15 15l-2 5L9 9l11 4-5 2zm0 0l5 5M7.188 2.239l.777 2.897M5.136 7.965l-2.898-.777M13.95 4.05l-2.122 2.122m-5.657 5.656l-2.12 2.122\"\n              />\n            }\n          >\n            Speak directly to your customers in a more meaningful way.\n          </Section>\n\n          <Section\n            title=\"Security\"\n            icon={\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"\n              />\n            }\n          >\n            Your customers&#039; data will be safe and secure.\n          </Section>\n\n          <Section\n            title=\"Integrations\"\n            description={\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\n              />\n            }\n          >\n            Connect with third-party tools that you&#039;re already using.\n          </Section>\n\n          <Section\n            title=\"Automations\"\n            icon={\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              />\n            }\n          >\n            Build strategic funnels that will drive your customers to convert\n          </Section>\n        </SimpleGrid>\n        <Box px={{ base: 5, sm: 8 }} py={5} bg={hbg} display={{ sm: 'flex' }}>\n          <Stack direction={{ base: 'row' }} spacing={{ base: 6, sm: 10 }}>\n            <Box display=\"flow-root\">\n              <Link\n                m={-3}\n                p={3}\n                display=\"flex\"\n                alignItems=\"center\"\n                rounded=\"md\"\n                fontSize=\"md\"\n                color={tcl}\n                _hover={{ bg: hbgh }}\n              >\n                <chakra.svg\n                  flexShrink={0}\n                  h={6}\n                  w={6}\n                  color=\"gray.400\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\"\n                  />\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                </chakra.svg>\n                <chakra.span ml={3}>Watch Demo</chakra.span>\n              </Link>\n            </Box>\n\n            <Box display=\"flow-root\">\n              <Link\n                m={-3}\n                p={3}\n                display=\"flex\"\n                alignItems=\"center\"\n                rounded=\"md\"\n                fontSize=\"md\"\n                color={tcl}\n                _hover={{ bg: hbgh }}\n              >\n                <chakra.svg\n                  flexShrink={0}\n                  h={6}\n                  w={6}\n                  color=\"gray.400\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"\n                  />\n                </chakra.svg>\n                <chakra.span ml={3}>Contact Sales</chakra.span>\n              </Link>\n            </Box>\n          </Stack>\n        </Box>\n      </React.Fragment>\n    );\n  };\n  const AuthButton = () => {\n    if (authenticated) {\n      return <LogoutBtn />;\n    } else {\n      return (\n        <>\n          <LoginBtn />\n          <SignupBtn />\n        </>\n      );\n    }\n  };\n  const MobileNavContent = () => {\n    const history = useHistory();\n    return (\n      <VStack\n        pos=\"absolute\"\n        top={0}\n        left={0}\n        right={0}\n        display={mobileNav.isOpen ? 'flex' : 'none'}\n        flexDirection=\"column\"\n        p={2}\n        pb={4}\n        m={2}\n        bg={bg}\n        spacing={3}\n        rounded=\"sm\"\n        shadow=\"sm\"\n      >\n        <CloseButton\n          aria-label=\"Close menu\"\n          justifySelf=\"self-start\"\n          onClick={mobileNav.onClose}\n        />\n        <Button\n          w=\"full\"\n          variant=\"ghost\"\n          leftIcon={<AiFillHome />}\n          onClick={() => history.push('/meet')}\n        >\n          Dashboard\n        </Button>\n        <Button\n          w=\"full\"\n          variant=\"solid\"\n          colorScheme=\"brand\"\n          leftIcon={<AiOutlineInbox />}\n        >\n          Inbox\n        </Button>\n        <Button w=\"full\" variant=\"ghost\" leftIcon={<BsFillCameraVideoFill />}>\n          Videos\n        </Button>\n      </VStack>\n    );\n  };\n  return (\n    <React.Fragment>\n      <chakra.header\n        ref={ref}\n        shadow={y > height ? 'sm' : undefined}\n        transition=\"box-shadow 0.2s\"\n        bg={bg}\n        w=\"full\"\n        overflowY=\"hidden\"\n        borderBottomWidth={2}\n        borderBottomColor={useColorModeValue('gray.200', 'gray.900')}\n      >\n        <chakra.div h=\"4.5rem\" mx=\"auto\" maxW=\"1200px\">\n          <Flex\n            w=\"full\"\n            h=\"full\"\n            px=\"6\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Flex align=\"flex-start\">\n              <Link as={ReachLink} to=\"/\">\n                <HStack>\n                  <Heading color=\"brand.600\">Teams</Heading>\n                </HStack>\n              </Link>\n            </Flex>\n            <Flex>\n              <HStack spacing=\"5\" display={{ base: 'none', md: 'flex' }}>\n                <Button\n                  onClick={() => history.push('/meet')}\n                  bg={bg}\n                  color=\"gray.500\"\n                  display=\"inline-flex\"\n                  alignItems=\"center\"\n                  fontSize=\"md\"\n                  _hover={{ color: cl }}\n                  _focus={{ boxShadow: 'none' }}\n                >\n                  Dashboard\n                </Button>\n                <Popover>\n                  <PopoverTrigger>\n                    <Button\n                      bg={bg}\n                      color=\"gray.500\"\n                      display=\"inline-flex\"\n                      alignItems=\"center\"\n                      fontSize=\"md\"\n                      _hover={{ color: cl }}\n                      _focus={{ boxShadow: 'none' }}\n                      rightIcon={<IoIosArrowDown />}\n                    >\n                      Features\n                    </Button>\n                  </PopoverTrigger>\n                  <PopoverContent\n                    w=\"100vw\"\n                    maxW=\"md\"\n                    _focus={{ boxShadow: 'md' }}\n                  >\n                    <Features />\n                  </PopoverContent>\n                </Popover>\n\n                <Button\n                  bg={bg}\n                  color=\"gray.500\"\n                  display=\"inline-flex\"\n                  alignItems=\"center\"\n                  fontSize=\"md\"\n                  _hover={{ color: cl }}\n                  _focus={{ boxShadow: 'none' }}\n                  onClick={() => history.push('/about')}\n                >\n                  About\n                </Button>\n              </HStack>\n            </Flex>\n            <Flex justify=\"flex-end\" align=\"center\" color=\"gray.400\">\n              <HStack spacing=\"5\" display={{ base: 'none', md: 'flex' }}>\n                <AuthButton />\n              </HStack>\n              <IconButton\n                size=\"md\"\n                fontSize=\"lg\"\n                aria-label={`Switch to ${text} mode`}\n                variant=\"ghost\"\n                color=\"current\"\n                ml={{ base: '0', md: '3' }}\n                onClick={toggleMode}\n                icon={<SwitchIcon />}\n              />\n              <IconButton\n                display={{ base: 'flex', md: 'none' }}\n                aria-label=\"Open menu\"\n                fontSize=\"20px\"\n                color={useColorModeValue('gray.800', 'inherit')}\n                variant=\"ghost\"\n                icon={<AiOutlineMenu />}\n                onClick={mobileNav.onOpen}\n              />\n            </Flex>\n          </Flex>\n          <MobileNavContent />\n        </chakra.div>\n      </chakra.header>\n    </React.Fragment>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/team-meeting-colored.3a8ef2c6.svg\";","import React from 'react';\nimport {\n  chakra,\n  Box,\n  useColorModeValue,\n  Stack,\n  Image,\n  Flex,\n  List,\n  ListItem,\n  ListIcon,\n  Spacer,\n} from '@chakra-ui/react';\n\nimport { MdCheckCircle } from 'react-icons/md';\nimport { useHistory } from 'react-router-dom';\nimport landingImage from '../assets/team-meeting-colored.svg';\n\nconst Home = () => {\n  const history = useHistory();\n  return (\n    <Flex\n      direction={{ base: 'column', md: 'row' }}\n      bg={useColorModeValue('gray.50')}\n      px={14}\n      py={20}\n      mx=\"auto\"\n    >\n      <Box\n        w={{ base: 'full', md: 11 / 12, xl: 9 / 12 }}\n        mx=\"auto\"\n        pr={{ md: 20 }}\n      >\n        <chakra.h2\n          fontSize={{ base: '3xl', sm: '4xl' }}\n          fontWeight=\"extrabold\"\n          lineHeight=\"shorter\"\n          color={useColorModeValue('#3c4178', 'gray.100')}\n          mb={6}\n        >\n          <chakra.span display=\"block\">Microsoft Teams</chakra.span>\n          <chakra.span\n            display=\"block\"\n            color={useColorModeValue('gray.700', 'gray.500')}\n          >\n            Meet, chat, call, and collaborate in just one place.\n          </chakra.span>\n        </chakra.h2>\n        <chakra.p\n          mb={6}\n          fontSize={{ base: 'lg', md: 'xl' }}\n          color={useColorModeValue('black.100', 'gray.300')}\n        >\n          <List spacing={3}>\n            <ListItem>\n              <ListIcon as={MdCheckCircle} color=\"brand.500\" />\n              Whether it’s chat, calls, or video, anyone can engage at any time,\n              bringing everyone closer.\n            </ListItem>\n            <ListItem>\n              <ListIcon as={MdCheckCircle} color=\"brand.500\" />\n              Share your opinion and have fun with your team. Send GIFs,\n              stickers, and emojis in a group chat or in one-to-one messages.\n            </ListItem>\n            <ListItem>\n              <ListIcon as={MdCheckCircle} color=\"brand.500\" />\n              Make and receive calls directly in Microsoft Teams with advanced\n              features like group calling, cloud voicemail, and call transfers.\n            </ListItem>\n          </List>\n        </chakra.p>\n        <Stack\n          direction={{ base: 'column', sm: 'row' }}\n          mb={{ base: 4, md: 8 }}\n          spacing={2}\n        >\n          <Box display=\"inline-flex\" rounded=\"md\" shadow=\"md\" width=\"md\">\n            <chakra.button\n              fontSize=\"xl\"\n              onClick={() => history.push('/meet')}\n              display=\"inline-flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              px={5}\n              py={3}\n              border=\"solid transparent\"\n              fontWeight=\"bold\"\n              w=\"full\"\n              rounded=\"md\"\n              color={useColorModeValue('white')}\n              bg={useColorModeValue('brand.600', 'brand.500')}\n              _hover={{\n                bg: useColorModeValue('brand.700', 'brand.600'),\n              }}\n            >\n              Get Started\n            </chakra.button>\n          </Box>\n        </Stack>\n      </Box>\n      <Spacer />\n      <Box w={{ base: 'full', md: 10 / 12 }} mx=\"auto\" textAlign=\"center\">\n        <Image\n          w=\"full\"\n          rounded=\"lg\"\n          shadow=\"2xl\"\n          boxSize=\"480\"\n          src={landingImage}\n          alt=\"Teammates talking over video conference\"\n        />\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirestore } from 'react-redux-firebase';\n\nconst ChatBox = ({ teamId }) => {\n  const [formValue, setFormValue] = useState('');\n  const auth = useSelector((state) => state.firebase.auth);\n  const firestore = useFirestore();\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    const { uid, photoURL } = auth;\n    const text = formValue;\n    setFormValue('');\n    await firestore.collection('teams').doc(teamId).collection('messages').add({\n      text,\n      createdAt: firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n  };\n\n  return (\n    <>\n      <form className=\"chat-box\" onSubmit={sendMessage}>\n        <input\n          className=\"chat-input\"\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n          placeholder=\"Type a new message\"\n        />\n\n        <button class=\"chat-btn\" type=\"submit\" disabled={!formValue}>\n          🕊️\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default ChatBox;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst ChatMessage = (props) => {\n  const { text, uid, photoURL } = props.message;\n  const user = useSelector((state) => state.firebase.auth);\n\n  const messageClass = uid === user.uid ? 'sent' : 'received';\n\n  return (\n    <>\n      <div className={`message ${messageClass}`}>\n        <img class=\"chat-avatar\" src={photoURL} alt=\"avatar\" />\n        <p class=\"chat-text\">{text}</p>\n      </div>\n    </>\n  );\n};\n\nexport default ChatMessage;\n","import React, { useRef, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirestoreConnect } from 'react-redux-firebase';\nimport ChatBox from './ChatBox';\nimport ChatMessage from './ChatMessage';\nimport '../../App.css';\n\nconst ChatRoom = ({ teamId }) => {\n  // connect to the firestore messages\n  useFirestoreConnect([\n    {\n      collection: 'teams',\n      doc: teamId,\n      subcollections: [\n        { collection: 'messages', orderBy: 'createdAt', limitToLast: '10' },\n      ],\n      storeAs: 'messages',\n    },\n  ]);\n  // get the messages from the redux store\n  const messages = useSelector(\n    ({ firestore: { ordered } }) => ordered.messages\n  );\n  console.log('messages :>> ', messages);\n\n  // auto scroll\n  const dummy = useRef();\n  useEffect(() => {\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  return (\n    <section className=\"chat-room\">\n      <main className=\"chat-content\">\n        {messages?.map((msg) => (\n          <ChatMessage key={msg.id} message={msg} />\n        ))}\n        <span ref={dummy}></span>\n      </main>\n      <ChatBox teamId={teamId} />\n    </section>\n  );\n};\n\nexport default ChatRoom;\n","import React from 'react';\nimport PublicRoute from './components/PublicRoute';\nimport PrivateRoute from './components/PrivateRoute';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Authentication/Login';\nimport Signup from './pages/Authentication/Signup';\n// import Meeting from './pages/Meeting';\nimport Meet from './pages/Meet';\nimport ForgotPassword from './pages/Authentication/ForgotPassword';\nimport { Box } from '@chakra-ui/react';\nimport { isLoaded, isEmpty } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\nimport Skelton from './pages/Skelton';\n// <Container maxW=\"xl\" centerContent>\n//   <Heading\n//     bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n//     bgClip=\"text\"\n//     fontSize=\"6xl\"\n//     fontWeight=\"extrabold\"\n//   >\n//     Video Chat\n//   </Heading>\n//   <Box className=\"join\">\n//     <ButtonGroup size={'lg'}>\n//       <Button\n//         onClick={() => dispatch(handleJoin())}\n//         leftIcon={<PhoneIcon w={5} h={4} />}\n//         colorScheme=\"pink\"\n//         variant=\"solid\"\n//       >\n//         NEW MEETING\n//       </Button>\n//       <Button\n//         onClick={() => dispatch(handleLeave())}\n//         rightIcon={<CloseIcon w={5} h={3} />}\n//         colorScheme=\"pink\"\n//         variant=\"outline\"\n//       >\n//         LEAVE\n//       </Button>\n//     </ButtonGroup>\n//   </Box>\n\n//   <VideoConference />\n// </Container>;\nimport Conference from './pages/Conference';\nimport Navbar from './components/Header/Navbar';\nimport Home from './pages/Home';\nimport ChatRoom from './pages/Chat/ChatRoom';\nconst App = () => {\n  const auth = useSelector((state) => state.firebase.auth);\n  const authenticated = isLoaded(auth) && !isEmpty(auth);\n\n  if (!isLoaded(auth)) {\n    return <Skelton />;\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Box>\n          <Navbar authenticated={authenticated} />\n          <Home />\n        </Box>\n      </Route>\n      <Route path=\"/about\" exact>\n        <ChatRoom teamId=\"xsWcNDCxtA3kku9yM9Cu\" />\n      </Route>\n      <PrivateRoute path=\"/join/meet/:id\" authenticated={authenticated}>\n        <Conference />\n      </PrivateRoute>\n      <PrivateRoute path=\"/meet\" authenticated={authenticated}>\n        <Box>\n          <Navbar authenticated={authenticated} />\n          <Meet />\n        </Box>\n      </PrivateRoute>\n      <PublicRoute path=\"/login\" authenticated={authenticated}>\n        <Login />\n      </PublicRoute>\n      <PublicRoute path=\"/signup\" authenticated={authenticated}>\n        <Signup />\n      </PublicRoute>\n      <PublicRoute path=\"/reset\" authenticated={authenticated}>\n        <ForgotPassword />\n      </PublicRoute>\n    </Switch>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase/app';\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport './services/firebase';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport theme from './theme';\nimport App from './App';\n\nimport './index.css';\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance, // <- needed if using firestore\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <Router>\n        <ChakraProvider theme={theme}>\n          <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n          <App />\n        </ChakraProvider>\n      </Router>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}